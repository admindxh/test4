<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:p="http://www.springframework.org/schema/p"
    xmlns:util="http://www.springframework.org/schema/util"
    xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
       http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util-3.0.xsd">
<!-- 自定义工作类 -->
<bean id="jobDetail" class="org.springframework.scheduling.quartz.JobDetailBean">
<property name="jobClass">
<value>bingo.modules.securityConsole.quartz.TestQuartzJob</value>
</property>
<property name="jobDataAsMap">
<map>

<entry key="exchangehbbService"> 
<ref bean="exchangehbbService"/> 
</entry>

</map>
</property>
</bean>
<!-- 注入的service的工作类 -->
<bean id="methodInvokingJobDetail" class="org.springframework.scheduling.quartz.MethodInvokingJobDetailFactoryBean">         
<!-- 指定定时任务调度类 -->  
<property name="targetObject">
<ref bean="exchangehbbService" />
</property>          
<!-- 指定定时任务调度方法 -->
<property name="targetMethod">
<value>getupdatejsrq</value>  
</property>
</bean>

<!-- 每隔10秒自动调用 配置模板 使用复杂的cronTrigger-->
<bean id="cronTrigger" class="org.springframework.scheduling.quartz.CronTriggerBean"> 
<property name="jobDetail" ref="methodInvokingJobDetail" /> 
<property name="cronExpression" value="0 0/5 23 * * ?" />
<!--<property name="cronExpression" value="0/10 * * * * ?" /> -->
</bean> 
<bean  id="schedulerTrigger" class="org.springframework.scheduling.quartz.SchedulerFactoryBean" autowire="no"> 
<property name="triggers"> 
<list> 
<ref bean="cronTrigger"/>    
</list> 
</property> 
</bean>
        <!-- 延迟1秒后，每隔10秒自动调用 配置模板 使用简单的SimpleTriggerBean-->
<bean id="st01SimpleTrigger"   class="org.springframework.scheduling.quartz.SimpleTriggerBean">  
            <property name="jobDetail" ref="jobDetail"></property>  
            <property name="startDelay" value="1000"></property>  
           <property name="repeatInterval" value="10000"></property>  
    </bean>  
         
</beans>