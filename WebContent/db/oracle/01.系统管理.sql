CREATE TABLE SEC_LOG  (
   ID                   VARCHAR2(38)                    NOT NULL,
   USER_ID              VARCHAR2(38)                    NOT NULL,
   LOG_TYPE             VARCHAR2(10)                   DEFAULT 'login' NOT NULL,
   USER_NAME            VARCHAR2(50)                    NOT NULL,
   OPERATION_NAME       VARCHAR2(50)                    NOT NULL,
   OPERATION_TIME       DATE                            NOT NULL,
   DESCRIPTION          VARCHAR2(3000)
);

COMMENT ON TABLE SEC_LOG IS
'安全日志(包括登录日志、操作日志和授权日志)';

COMMENT ON COLUMN SEC_LOG.ID IS
'日志标识';

COMMENT ON COLUMN SEC_LOG.USER_ID IS
'用户标识';

COMMENT ON COLUMN SEC_LOG.LOG_TYPE IS
'日志类型（login、operation、auth）';

COMMENT ON COLUMN SEC_LOG.USER_NAME IS
'用户名称';

COMMENT ON COLUMN SEC_LOG.OPERATION_NAME IS
'操作名称';

COMMENT ON COLUMN SEC_LOG.OPERATION_TIME IS
'操作时间';

COMMENT ON COLUMN SEC_LOG.DESCRIPTION IS
'日志描述';

ALTER TABLE SEC_LOG
   ADD CONSTRAINT CKC_LOG_TYPE_SEC_LOG CHECK (LOG_TYPE IN ('login','operation','auth'));

ALTER TABLE SEC_LOG
   ADD CONSTRAINT PK_SEC_LOG PRIMARY KEY (ID);

CREATE INDEX IDX_SEC_LOG_TYPE ON SEC_LOG (
   LOG_TYPE ASC
);

CREATE INDEX IDX_SEC_LOG_USERID ON SEC_LOG (
   USER_ID ASC
);

CREATE INDEX IDX_SEC_LOG_USERNAME ON SEC_LOG (
   USER_NAME ASC
);

CREATE INDEX IDX_SEC_LOG_OPERATIONNAME ON SEC_LOG (
   OPERATION_NAME ASC
);

CREATE INDEX IDX_SEC_LOG_OPERATIONTIME ON SEC_LOG (
   OPERATION_TIME ASC
);

CREATE TABLE SEC_ORG_ROLE  (
   ORG_ID               VARCHAR2(38)                    NOT NULL,
   ROLE_ID              VARCHAR2(38)                    NOT NULL,
   CREATED_BY           VARCHAR2(38)                    NOT NULL,
   CREATED_DATE         DATE                            NOT NULL,
   LAST_UPDATED_BY      VARCHAR2(38)                    NOT NULL,
   LAST_UPDATED_DATE    DATE                            NOT NULL
);

COMMENT ON TABLE SEC_ORG_ROLE IS
'组织角色表，存储组织在组织上充当的角色。';

COMMENT ON COLUMN SEC_ORG_ROLE.ORG_ID IS
'组织标识';

COMMENT ON COLUMN SEC_ORG_ROLE.ROLE_ID IS
'具备的角色（只能是管理类角色和混合类角色）';

COMMENT ON COLUMN SEC_ORG_ROLE.CREATED_BY IS
'创建人';

COMMENT ON COLUMN SEC_ORG_ROLE.CREATED_DATE IS
'创建时间';

COMMENT ON COLUMN SEC_ORG_ROLE.LAST_UPDATED_BY IS
'最后修改人';

COMMENT ON COLUMN SEC_ORG_ROLE.LAST_UPDATED_DATE IS
'最后修改时间';

ALTER TABLE SEC_ORG_ROLE
   ADD CONSTRAINT PK_SEC_ORG_ROLE PRIMARY KEY (ORG_ID, ROLE_ID);

CREATE INDEX INX_ORGROLE_ORG ON SEC_ORG_ROLE (
   ORG_ID ASC
);

CREATE INDEX INX_ORGROLE_ROLE ON SEC_ORG_ROLE (
   ROLE_ID ASC
);

CREATE TABLE SEC_ORGANIZATION  (
   ID                   VARCHAR2(38)                    NOT NULL,
   PATH                 VARCHAR2(300)                   NOT NULL,
   PARENT               VARCHAR2(38),
   NAME                 VARCHAR2(150),
   CODE                 VARCHAR2(1000),
   "LEVEL"              INTEGER,
   "ORDER"              INTEGER,
   TYPE                 INTEGER,
   STATUS               VARCHAR2(10)                   DEFAULT 'enabled' NOT NULL,
   CREATED_BY           VARCHAR2(38)                    NOT NULL,
   CREATED_DATE         DATE                            NOT NULL,
   LAST_UPDATED_BY      VARCHAR2(38)                    NOT NULL,
   LAST_UPDATED_DATE    DATE                            NOT NULL
);

COMMENT ON TABLE SEC_ORGANIZATION IS
'系统组织表';

COMMENT ON COLUMN SEC_ORGANIZATION.ID IS
'组织标识';

COMMENT ON COLUMN SEC_ORGANIZATION.PATH IS
'包括父亲标识的组合标志';

COMMENT ON COLUMN SEC_ORGANIZATION.PARENT IS
'父组织标识';

COMMENT ON COLUMN SEC_ORGANIZATION.NAME IS
'名称';

COMMENT ON COLUMN SEC_ORGANIZATION.CODE IS
'编码';

COMMENT ON COLUMN SEC_ORGANIZATION."LEVEL" IS
'层级';

COMMENT ON COLUMN SEC_ORGANIZATION."ORDER" IS
'顺序';

COMMENT ON COLUMN SEC_ORGANIZATION.TYPE IS
'类型（公司、子公司、部门、科室等）';

COMMENT ON COLUMN SEC_ORGANIZATION.STATUS IS
'状态';

COMMENT ON COLUMN SEC_ORGANIZATION.CREATED_BY IS
'创建人';

COMMENT ON COLUMN SEC_ORGANIZATION.CREATED_DATE IS
'创建时间';

COMMENT ON COLUMN SEC_ORGANIZATION.LAST_UPDATED_BY IS
'最后修改人';

COMMENT ON COLUMN SEC_ORGANIZATION.LAST_UPDATED_DATE IS
'最后修改时间';

ALTER TABLE SEC_ORGANIZATION
   ADD CONSTRAINT CKC_STATUS_SEC_ORGA CHECK (STATUS IN ('enabled','disabled'));

ALTER TABLE SEC_ORGANIZATION
   ADD CONSTRAINT PK_SEC_ORGANIZATION PRIMARY KEY (ID);

CREATE INDEX INX_SEC_INDEX_STATUS ON SEC_ORGANIZATION (
   STATUS ASC
);

CREATE UNIQUE INDEX INX_SEC_INDEX_PATH ON SEC_ORGANIZATION (
   PATH ASC
);

CREATE TABLE SEC_PERMISSION_RESOURCE  (
   ID                   VARCHAR2(38)                    NOT NULL,
   PERMISSION_ID        VARCHAR2(38)                    NOT NULL,
   TYPE                 VARCHAR2(30)                   DEFAULT 'URL' NOT NULL,
   "RESOURCE"           VARCHAR2(300)                   NOT NULL,
   CREATED_BY           VARCHAR2(38)                    NOT NULL,
   CREATED_DATE         DATE                            NOT NULL,
   LAST_UPDATED_BY      VARCHAR2(38)                    NOT NULL,
   LAST_UPDATED_DATE    DATE                            NOT NULL
);

COMMENT ON TABLE SEC_PERMISSION_RESOURCE IS
'权限资源表';

COMMENT ON COLUMN SEC_PERMISSION_RESOURCE.ID IS
'操作资源标识';

COMMENT ON COLUMN SEC_PERMISSION_RESOURCE.PERMISSION_ID IS
'操作标识';

COMMENT ON COLUMN SEC_PERMISSION_RESOURCE.TYPE IS
'资源类型，默认是Url，将来可能有其他类型';

COMMENT ON COLUMN SEC_PERMISSION_RESOURCE."RESOURCE" IS
'资源';

COMMENT ON COLUMN SEC_PERMISSION_RESOURCE.CREATED_BY IS
'创建人';

COMMENT ON COLUMN SEC_PERMISSION_RESOURCE.CREATED_DATE IS
'创建时间';

COMMENT ON COLUMN SEC_PERMISSION_RESOURCE.LAST_UPDATED_BY IS
'最后修改人';

COMMENT ON COLUMN SEC_PERMISSION_RESOURCE.LAST_UPDATED_DATE IS
'最后修改时间';

ALTER TABLE SEC_PERMISSION_RESOURCE
   ADD CONSTRAINT PK_SEC_PERMISSION_RESOURCE PRIMARY KEY (ID);

CREATE INDEX FK_PERMISSION_RESOURCE ON SEC_PERMISSION_RESOURCE (
   PERMISSION_ID ASC
);

CREATE INDEX IDX_PERMISSION_RESOURCE_01 ON SEC_PERMISSION_RESOURCE (
   "RESOURCE" ASC
);

CREATE TABLE SEC_PERMISSION  (
   ID                   VARCHAR2(38)                    NOT NULL,
   PATH                 VARCHAR2(300)                   NOT NULL,
   PARENT               VARCHAR2(38),
   CODE                 VARCHAR2(50)                    NOT NULL,
   NAME                 VARCHAR2(150)                   NOT NULL,
   CONTEXT              VARCHAR2(300),
   URL                  VARCHAR2(300),
   TYPE                 VARCHAR2(10)                   DEFAULT 'Page' NOT NULL,
   ELEMENT_ID           VARCHAR2(50),
   ELEMENT_BEHAVIOUR    VARCHAR2(30),
   "ORDER"              INTEGER                        DEFAULT 1000,
   DESCRIPTION          VARCHAR2(1000),
   CREATED_BY           VARCHAR2(38)                    NOT NULL,
   CREATED_DATE         DATE                            NOT NULL,
   LAST_UPDATED_BY      VARCHAR2(38)                    NOT NULL,
   LAST_UPDATED_DATE    DATE                            NOT NULL
);

COMMENT ON TABLE SEC_PERMISSION IS
'操作权限表';

COMMENT ON COLUMN SEC_PERMISSION.ID IS
'操作标识';

COMMENT ON COLUMN SEC_PERMISSION.PATH IS
'包括父亲标识的组合标志';

COMMENT ON COLUMN SEC_PERMISSION.PARENT IS
'父操作标识';

COMMENT ON COLUMN SEC_PERMISSION.CODE IS
'操作代码';

COMMENT ON COLUMN SEC_PERMISSION.NAME IS
'名称';

COMMENT ON COLUMN SEC_PERMISSION.CONTEXT IS
'地址空间';

COMMENT ON COLUMN SEC_PERMISSION.URL IS
'Page对应的URL，或者页面元素所在的URL';

COMMENT ON COLUMN SEC_PERMISSION.TYPE IS
'模块、页面或者元素';

COMMENT ON COLUMN SEC_PERMISSION.ELEMENT_ID IS
'受控页面元素的ID';

COMMENT ON COLUMN SEC_PERMISSION.ELEMENT_BEHAVIOUR IS
'页面元素默认行为';

COMMENT ON COLUMN SEC_PERMISSION."ORDER" IS
'顺序';

COMMENT ON COLUMN SEC_PERMISSION.DESCRIPTION IS
'描述';

COMMENT ON COLUMN SEC_PERMISSION.CREATED_BY IS
'创建人';

COMMENT ON COLUMN SEC_PERMISSION.CREATED_DATE IS
'创建时间';

COMMENT ON COLUMN SEC_PERMISSION.LAST_UPDATED_BY IS
'最后修改人';

COMMENT ON COLUMN SEC_PERMISSION.LAST_UPDATED_DATE IS
'最后修改时间';

ALTER TABLE SEC_PERMISSION
   ADD CONSTRAINT CKC_TYPE_SEC_PERM CHECK (TYPE IN ('Module','Page','Element'));

ALTER TABLE SEC_PERMISSION
   ADD CONSTRAINT CKC_ELEMENT_BEHAVIOUR_SEC_PERM CHECK (ELEMENT_BEHAVIOUR IS NULL OR (ELEMENT_BEHAVIOUR IN ('invisible','disabled')));

ALTER TABLE SEC_PERMISSION
   ADD CONSTRAINT PK_SEC_PERMISSION PRIMARY KEY (ID);

CREATE INDEX FK_PARENTPERMISSION ON SEC_PERMISSION (
   PARENT ASC
);

CREATE INDEX IDX_PERMISSIONS_URL ON SEC_PERMISSION (
   URL ASC
);

CREATE INDEX LDX_PERMISSIONS_TYPE ON SEC_PERMISSION (
   TYPE ASC
);

CREATE UNIQUE INDEX IDX_PERMISSIONS_CODE ON SEC_PERMISSION (
   CODE ASC
);

CREATE UNIQUE INDEX IDX_PERMISSIONS_PATH ON SEC_PERMISSION (
   PATH ASC
);

CREATE TABLE SEC_PERMISSION_RULE  (
   ID                   VARCHAR2(38)                    NOT NULL,
   OPERATION_ID         VARCHAR2(38)                    NOT NULL,
   NAME                 VARCHAR2(150)                   NOT NULL,
   PRIORITY             INTEGER                        DEFAULT 100 NOT NULL,
   RULE                 VARCHAR2(1000)                  NOT NULL,
   BEHAVIOUR            VARCHAR2(30),
   DESCRIPTION          VARCHAR2(1000),
   IS_DEFAULT           INTEGER                        DEFAULT 0 NOT NULL,
   CREATED_BY           VARCHAR2(38)                    NOT NULL,
   CREATED_DATE         DATE                            NOT NULL,
   LAST_UPDATED_BY      VARCHAR2(38)                    NOT NULL,
   LAST_UPDATED_DATE    DATE                            NOT NULL
);

COMMENT ON TABLE SEC_PERMISSION_RULE IS
'权限规则表';

COMMENT ON COLUMN SEC_PERMISSION_RULE.ID IS
'规则标识';

COMMENT ON COLUMN SEC_PERMISSION_RULE.OPERATION_ID IS
'操作标识';

COMMENT ON COLUMN SEC_PERMISSION_RULE.NAME IS
'名称';

COMMENT ON COLUMN SEC_PERMISSION_RULE.PRIORITY IS
'优先级';

COMMENT ON COLUMN SEC_PERMISSION_RULE.RULE IS
'规则';

COMMENT ON COLUMN SEC_PERMISSION_RULE.BEHAVIOUR IS
'行为';

COMMENT ON COLUMN SEC_PERMISSION_RULE.DESCRIPTION IS
'描述';

COMMENT ON COLUMN SEC_PERMISSION_RULE.IS_DEFAULT IS
'是否缺省规则';

COMMENT ON COLUMN SEC_PERMISSION_RULE.CREATED_BY IS
'创建人';

COMMENT ON COLUMN SEC_PERMISSION_RULE.CREATED_DATE IS
'创建时间';

COMMENT ON COLUMN SEC_PERMISSION_RULE.LAST_UPDATED_BY IS
'最后修改人';

COMMENT ON COLUMN SEC_PERMISSION_RULE.LAST_UPDATED_DATE IS
'最后修改时间';

ALTER TABLE SEC_PERMISSION_RULE
   ADD CONSTRAINT CKC_BEHAVIOUR_SEC_PERM CHECK (BEHAVIOUR IS NULL OR (BEHAVIOUR IN ('invisible','disabled')));

ALTER TABLE SEC_PERMISSION_RULE
   ADD CONSTRAINT CKC_IS_DEFAULT_SEC_PERM CHECK (IS_DEFAULT IN (0,1));

ALTER TABLE SEC_PERMISSION_RULE
   ADD CONSTRAINT PK_SEC_PERMISSION_RULE PRIMARY KEY (ID);

CREATE INDEX FK_SECURITYRULE_OPERATIONID ON SEC_PERMISSION_RULE (
   OPERATION_ID ASC
);

CREATE TABLE SEC_ROLE  (
   ID                   VARCHAR2(38)                    NOT NULL,
   CODE                 VARCHAR2(50),
   NAME                 VARCHAR2(150)                   NOT NULL,
   DESCRIPTION          VARCHAR2(1000),
   TYPE                 SMALLINT                       DEFAULT 0 NOT NULL,
   PARTICIPANT_TYPE     SMALLINT                       DEFAULT NULL,
   CREATED_BY           VARCHAR2(38)                    NOT NULL,
   CREATED_DATE         DATE                            NOT NULL,
   LAST_UPDATED_BY      VARCHAR2(38)                    NOT NULL,
   LAST_UPDATED_DATE    DATE                            NOT NULL
);

COMMENT ON TABLE SEC_ROLE IS
'系统角色表，对工作流而言是角色类型';

COMMENT ON COLUMN SEC_ROLE.ID IS
'角色标识';

COMMENT ON COLUMN SEC_ROLE.CODE IS
'角色编码';

COMMENT ON COLUMN SEC_ROLE.NAME IS
'角色名';

COMMENT ON COLUMN SEC_ROLE.DESCRIPTION IS
'描述';

COMMENT ON COLUMN SEC_ROLE.TYPE IS
'角色类型（管理类、流转类、混合类）';

COMMENT ON COLUMN SEC_ROLE.PARTICIPANT_TYPE IS
'参与者类型（用户、部门）';

COMMENT ON COLUMN SEC_ROLE.CREATED_BY IS
'创建人';

COMMENT ON COLUMN SEC_ROLE.CREATED_DATE IS
'创建时间';

COMMENT ON COLUMN SEC_ROLE.LAST_UPDATED_BY IS
'最后修改人';

COMMENT ON COLUMN SEC_ROLE.LAST_UPDATED_DATE IS
'最后修改时间';

ALTER TABLE SEC_ROLE
   ADD CONSTRAINT CKC_TYPE_SEC_ROLE CHECK (TYPE IN (0,1,2));

ALTER TABLE SEC_ROLE
   ADD CONSTRAINT CKC_PARTICIPANT_TYPE_SEC_ROLE CHECK (PARTICIPANT_TYPE IS NULL OR (PARTICIPANT_TYPE IN (0,1)));

ALTER TABLE SEC_ROLE
   ADD CONSTRAINT AK_KEY_2_SEC_ROLE UNIQUE (CODE);

ALTER TABLE SEC_ROLE
   ADD CONSTRAINT PK_SEC_ROLE PRIMARY KEY (ID);

CREATE INDEX INX_ROLES_TYPE ON SEC_ROLE (
   TYPE ASC
);

CREATE TABLE SEC_ROLE_INHERITANCE  (
   PARENT_ROLE_ID       VARCHAR2(38)                    NOT NULL,
   CHILD_ROLE_ID        VARCHAR2(38)                    NOT NULL,
   CREATED_BY           VARCHAR2(38)                    NOT NULL,
   CREATED_DATE         DATE                            NOT NULL,
   LAST_UPDATED_BY      VARCHAR2(38)                    NOT NULL,
   LAST_UPDATED_DATE    DATE                            NOT NULL
);

COMMENT ON TABLE SEC_ROLE_INHERITANCE IS
'角色继承表，记录角色的父子关系';

COMMENT ON COLUMN SEC_ROLE_INHERITANCE.PARENT_ROLE_ID IS
'父角色标识';

COMMENT ON COLUMN SEC_ROLE_INHERITANCE.CHILD_ROLE_ID IS
'子角色标识';

COMMENT ON COLUMN SEC_ROLE_INHERITANCE.CREATED_BY IS
'创建人';

COMMENT ON COLUMN SEC_ROLE_INHERITANCE.CREATED_DATE IS
'创建时间';

COMMENT ON COLUMN SEC_ROLE_INHERITANCE.LAST_UPDATED_BY IS
'最后修改人';

COMMENT ON COLUMN SEC_ROLE_INHERITANCE.LAST_UPDATED_DATE IS
'最后修改时间';

ALTER TABLE SEC_ROLE_INHERITANCE
   ADD CONSTRAINT PK_SEC_ROLE_INHERITANCE PRIMARY KEY (PARENT_ROLE_ID, CHILD_ROLE_ID);

CREATE INDEX FK_SEC_ROLEINHERI_PARENT ON SEC_ROLE_INHERITANCE (
   PARENT_ROLE_ID ASC
);

CREATE INDEX FK_SEC_ROLEINHERI_CHILD ON SEC_ROLE_INHERITANCE (
   CHILD_ROLE_ID ASC
);

CREATE TABLE SEC_ROLE_PERMISSION  (
   ROLE_ID              VARCHAR2(38)                    NOT NULL,
   OPERATION_ID         VARCHAR2(38)                    NOT NULL,
   RULE_ID              VARCHAR2(38),
   CREATED_BY           VARCHAR2(38)                    NOT NULL,
   CREATED_DATE         DATE                            NOT NULL,
   LAST_UPDATED_BY      VARCHAR2(38)                    NOT NULL,
   LAST_UPDATED_DATE    DATE                            NOT NULL
);

COMMENT ON TABLE SEC_ROLE_PERMISSION IS
'角色权限表';

COMMENT ON COLUMN SEC_ROLE_PERMISSION.ROLE_ID IS
'角色标识';

COMMENT ON COLUMN SEC_ROLE_PERMISSION.OPERATION_ID IS
'操作标识';

COMMENT ON COLUMN SEC_ROLE_PERMISSION.RULE_ID IS
'规则标识';

COMMENT ON COLUMN SEC_ROLE_PERMISSION.CREATED_BY IS
'创建人';

COMMENT ON COLUMN SEC_ROLE_PERMISSION.CREATED_DATE IS
'创建时间';

COMMENT ON COLUMN SEC_ROLE_PERMISSION.LAST_UPDATED_BY IS
'最后修改人';

COMMENT ON COLUMN SEC_ROLE_PERMISSION.LAST_UPDATED_DATE IS
'最后修改时间';

ALTER TABLE SEC_ROLE_PERMISSION
   ADD CONSTRAINT PK_SEC_ROLE_PERMISSION PRIMARY KEY (ROLE_ID, OPERATION_ID);

CREATE TABLE SEC_USER  (
   ID                   VARCHAR2(38)                    NOT NULL,
   NAME                 VARCHAR2(50)                    NOT NULL,
   TYPE                 VARCHAR2(10)                   DEFAULT 'local' NOT NULL,
   LOGIN_ID             VARCHAR2(30)                    NOT NULL,
   PASSWORD             VARCHAR2(50),
   EMAIL                VARCHAR2(50),
   MOBILE_PHONE         VARCHAR2(15),
   IM                   VARCHAR2(50),
   TELEPHONE            VARCHAR2(15),
   SEX                  CHAR(1)                        DEFAULT 'U' NOT NULL,
   BIRTHDAY             DATE,
   STATUS               VARCHAR2(10)                   DEFAULT 'enabled' NOT NULL,
   ORG_ID               VARCHAR2(38)                    NOT NULL,
   RANK                 VARCHAR2(50),
   CREATED_BY           VARCHAR2(38)                    NOT NULL,
   CREATED_DATE         DATE                            NOT NULL,
   LAST_UPDATED_BY      VARCHAR2(38)                    NOT NULL,
   LAST_UPDATED_DATE    DATE                            NOT NULL
);

COMMENT ON TABLE SEC_USER IS
'系统用户表';

COMMENT ON COLUMN SEC_USER.ID IS
'用户标识';

COMMENT ON COLUMN SEC_USER.NAME IS
'姓名';

COMMENT ON COLUMN SEC_USER.TYPE IS
'类型';

COMMENT ON COLUMN SEC_USER.LOGIN_ID IS
'账户';

COMMENT ON COLUMN SEC_USER.PASSWORD IS
'密码';

COMMENT ON COLUMN SEC_USER.EMAIL IS
'邮件';

COMMENT ON COLUMN SEC_USER.MOBILE_PHONE IS
'手机';

COMMENT ON COLUMN SEC_USER.IM IS
'即时通讯号';

COMMENT ON COLUMN SEC_USER.TELEPHONE IS
'办公电话';

COMMENT ON COLUMN SEC_USER.SEX IS
'性别';

COMMENT ON COLUMN SEC_USER.BIRTHDAY IS
'生日';

COMMENT ON COLUMN SEC_USER.STATUS IS
'状态';

COMMENT ON COLUMN SEC_USER.ORG_ID IS
'所属组织';

COMMENT ON COLUMN SEC_USER.RANK IS
'职位';

COMMENT ON COLUMN SEC_USER.CREATED_BY IS
'创建人';

COMMENT ON COLUMN SEC_USER.CREATED_DATE IS
'创建时间';

COMMENT ON COLUMN SEC_USER.LAST_UPDATED_BY IS
'最后修改人';

COMMENT ON COLUMN SEC_USER.LAST_UPDATED_DATE IS
'最后修改时间';

ALTER TABLE SEC_USER
   ADD CONSTRAINT CKC_TYPE_SEC_USER CHECK (TYPE IN ('local','portal'));

ALTER TABLE SEC_USER
   ADD CONSTRAINT CKC_SEX_SEC_USER CHECK (SEX IN ('F','M','U'));

ALTER TABLE SEC_USER
   ADD CONSTRAINT CKC_STATUS_SEC_USER CHECK (STATUS IN ('enabled','disabled'));

ALTER TABLE SEC_USER
   ADD CONSTRAINT PK_SEC_USER PRIMARY KEY (ID);

ALTER TABLE SEC_USER
   ADD CONSTRAINT AK_AK_USERLOGINID_SEC_USER UNIQUE (LOGIN_ID, TYPE);

CREATE TABLE SEC_USER_ROLE  (
   USER_ID              VARCHAR2(38)                    NOT NULL,
   ROLE_ID              VARCHAR2(38)                    NOT NULL,
   CREATED_BY           VARCHAR2(38)                    NOT NULL,
   CREATED_DATE         DATE                            NOT NULL,
   LAST_UPDATED_BY      VARCHAR2(38)                    NOT NULL,
   LAST_UPDATED_DATE    DATE                            NOT NULL
);

COMMENT ON TABLE SEC_USER_ROLE IS
'用户角色表，存储用户在组织上充当的角色。';

COMMENT ON COLUMN SEC_USER_ROLE.USER_ID IS
'用户标识';

COMMENT ON COLUMN SEC_USER_ROLE.ROLE_ID IS
'角色标识（只能是管理类角色和混合类角色）';

COMMENT ON COLUMN SEC_USER_ROLE.CREATED_BY IS
'创建人';

COMMENT ON COLUMN SEC_USER_ROLE.CREATED_DATE IS
'创建时间';

COMMENT ON COLUMN SEC_USER_ROLE.LAST_UPDATED_BY IS
'最后修改人';

COMMENT ON COLUMN SEC_USER_ROLE.LAST_UPDATED_DATE IS
'最后修改时间';

ALTER TABLE SEC_USER_ROLE
   ADD CONSTRAINT PK_SEC_USER_ROLE PRIMARY KEY (USER_ID, ROLE_ID);

CREATE INDEX INX_USERROLE_USER ON SEC_USER_ROLE (
   USER_ID ASC
);

CREATE INDEX INX_USERROLE_ROLE ON SEC_USER_ROLE (
   ROLE_ID ASC
);

CREATE OR REPLACE VIEW V_SEC_MANAGE_ROLE AS
SELECT * 
FROM SEC_ROLE
WHERE TYPE IN (0,2)
WITH READ ONLY;

 COMMENT ON TABLE V_SEC_MANAGE_ROLE IS
'所有管理角色';

CREATE OR REPLACE VIEW V_SEC_VALID_ORG AS
SELECT *
FROM
   SEC_ORGANIZATION
WHERE
   STATUS = 'enabled'

WITH READ ONLY;

 COMMENT ON TABLE V_SEC_VALID_ORG IS
'所有启用的组织机构';

CREATE OR REPLACE VIEW V_SEC_WORKFLOW_ROLE AS
SELECT * 
FROM SEC_ROLE
WHERE TYPE IN (1,2)
WITH READ ONLY;

 COMMENT ON TABLE V_SEC_WORKFLOW_ROLE IS
'所有管理角色';

ALTER TABLE SEC_LOG
   ADD CONSTRAINT FK_SEC_LOG_REFERENCE_SEC_USER FOREIGN KEY (USER_ID)
      REFERENCES SEC_USER (ID);

ALTER TABLE SEC_ORG_ROLE
   ADD CONSTRAINT FK_SEC_ORGR_REFERENCE_SEC_ORG2 FOREIGN KEY (ORG_ID)
      REFERENCES SEC_ORGANIZATION (ID);

ALTER TABLE SEC_ORG_ROLE
   ADD CONSTRAINT FK_SEC_ORG__REFERENCE_SEC_ROLE FOREIGN KEY (ROLE_ID)
      REFERENCES SEC_ROLE (ID);

ALTER TABLE SEC_ORGANIZATION
   ADD CONSTRAINT FK_SEC_ORGA_REFERENCE_SEC_ORGA FOREIGN KEY (PARENT)
      REFERENCES SEC_ORGANIZATION (ID)
      ON DELETE CASCADE;

ALTER TABLE SEC_PERMISSION_RESOURCE
   ADD CONSTRAINT FK_SEC_PERM_REFERENCE_SEC_PERM FOREIGN KEY (PERMISSION_ID)
      REFERENCES SEC_PERMISSION (ID);

ALTER TABLE SEC_PERMISSION
   ADD CONSTRAINT FK_SEC_PERM_PARENTPER_SEC_PERM FOREIGN KEY (PARENT)
      REFERENCES SEC_PERMISSION (ID)
      ON DELETE CASCADE;

ALTER TABLE SEC_PERMISSION_RULE
   ADD CONSTRAINT FK_SEC_SECU_BELONGTOO_SEC_PERM FOREIGN KEY (OPERATION_ID)
      REFERENCES SEC_PERMISSION (ID)
      ON DELETE CASCADE;

ALTER TABLE SEC_ROLE_INHERITANCE
   ADD CONSTRAINT FK_SEC_ROLE_INHERI_ROLE FOREIGN KEY (PARENT_ROLE_ID)
      REFERENCES SEC_ROLE (ID)
      ON DELETE CASCADE;

ALTER TABLE SEC_ROLE_INHERITANCE
   ADD CONSTRAINT FK_SEC_ROLE_INHERI_CHILD_ROLE FOREIGN KEY (CHILD_ROLE_ID)
      REFERENCES SEC_ROLE (ID)
      ON DELETE CASCADE;

ALTER TABLE SEC_ROLE_PERMISSION
   ADD CONSTRAINT FK_SEC_ROLE_ASSIGNTOR_SEC_ROLE FOREIGN KEY (ROLE_ID)
      REFERENCES SEC_ROLE (ID)
      ON DELETE CASCADE;

ALTER TABLE SEC_ROLE_PERMISSION
   ADD CONSTRAINT FK_SEC_ROLE_BELONGTOP_SEC_PERM FOREIGN KEY (OPERATION_ID)
      REFERENCES SEC_PERMISSION (ID)
      ON DELETE CASCADE;

ALTER TABLE SEC_ROLE_PERMISSION
   ADD CONSTRAINT FK_SEC_ROLE_PERMISSIO_SEC_SECU FOREIGN KEY (RULE_ID)
      REFERENCES SEC_PERMISSION_RULE (ID);

ALTER TABLE SEC_USER
   ADD CONSTRAINT FK_SEC_USER_REFERENCE_SEC_ORG1 FOREIGN KEY (ORG_ID)
      REFERENCES SEC_ORGANIZATION (ID)
      ON DELETE CASCADE;

ALTER TABLE SEC_USER_ROLE
   ADD CONSTRAINT FK_SEC_USER_ROLEROLE_SEC_ROLE FOREIGN KEY (ROLE_ID)
      REFERENCES SEC_ROLE (ID)
      ON DELETE CASCADE;

ALTER TABLE SEC_USER_ROLE
   ADD CONSTRAINT FK_SEC_USER_USERROLE_SEC_USER FOREIGN KEY (USER_ID)
      REFERENCES SEC_USER (ID)
      ON DELETE CASCADE;

